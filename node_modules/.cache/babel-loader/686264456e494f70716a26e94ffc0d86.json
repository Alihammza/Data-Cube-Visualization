{"ast":null,"code":"import _objectSpread from \"/home/ali/Documents/thesis/3D Display of Datacube Query Results/main/my-app-ows/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/ali/Documents/thesis/3D Display of Datacube Query Results/main/my-app-ows/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ali/Documents/thesis/3D Display of Datacube Query Results/main/my-app-ows/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ali/Documents/thesis/3D Display of Datacube Query Results/main/my-app-ows/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ali/Documents/thesis/3D Display of Datacube Query Results/main/my-app-ows/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ali/Documents/thesis/3D Display of Datacube Query Results/main/my-app-ows/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ali/Documents/thesis/3D Display of Datacube Query Results/main/my-app-ows/src/components/SliderPage.js\";\nimport 'rc-slider/assets/index.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport convert from 'xml-js';\nimport Slider from 'rc-slider';\nimport moment from 'moment';\nimport { API } from '../App';\nimport '../style/SliderPage.css';\nvar Range = Slider.Range;\n\nvar SliderControlled =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SliderControlled, _Component);\n\n  function SliderControlled(props) {\n    var _this;\n\n    _classCallCheck(this, SliderControlled);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SliderControlled).call(this, props));\n\n    _this.getFormattedUnix = function (unix) {\n      return moment.unix(unix).format('YYYY-MM-DD[T]00:00:00') + '.000Z';\n    };\n\n    _this.onLatitudeChange = function (value) {\n      _this.setState({\n        values: _objectSpread({}, _this.state.values, {\n          latitude: {\n            start: value[0],\n            end: value[1]\n          }\n        })\n      });\n    };\n\n    _this.onLongitudeChange = function (value) {\n      _this.setState({\n        values: _objectSpread({}, _this.state.values, {\n          longitude: {\n            start: value[0],\n            end: value[1]\n          }\n        })\n      });\n    };\n\n    _this.onUnixChange = function (value) {\n      _this.setState({\n        values: _objectSpread({}, _this.state.values, {\n          unix: {\n            start: value[0],\n            end: value[1]\n          }\n        })\n      });\n    };\n\n    _this.onSaveNewRangeValues = function () {\n      var values = _this.state.values;\n\n      var data = _objectSpread({}, values, {\n        unix: {\n          start: _this.getFormattedUnix(values.unix.start),\n          end: _this.getFormattedUnix(values.unix.end)\n        }\n      });\n\n      _this.props.onRangeValuesChange(data);\n    };\n\n    _this.state = {\n      ranges: {\n        longitude: {\n          start: 0,\n          end: 0\n        },\n        latitude: {\n          start: 0,\n          end: 0\n        },\n        unix: {\n          start: 0,\n          end: 0\n        }\n      },\n      values: {\n        longitude: {\n          start: 0,\n          end: 0\n        },\n        latitude: {\n          start: 0,\n          end: 0\n        },\n        unix: {\n          start: 0,\n          end: 0\n        }\n      }\n    };\n    return _this;\n  } // There we trigger initial min/max range values for the keys (longitude, latitude and unix)\n\n\n  _createClass(SliderControlled, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = API + this.props.query + '&' + this.props.format;\n      axios.get(url).then(function (resp) {\n        var xmltojson = JSON.parse(convert.xml2json(resp.data, {\n          compact: false,\n          spaces: 4\n        }));\n        var lower = xmltojson.elements[0].elements[0].elements[0].elements[0].elements[0].text;\n        var upper = xmltojson.elements[0].elements[0].elements[0].elements[1].elements[0].text;\n        var startValues = lower.split(' ');\n        var endValues = upper.split(' ');\n        var minLongitude = startValues[1];\n        var maxLongitude = endValues[1];\n        var minLatitude = startValues[0];\n        var maxLatitude = endValues[0];\n        var minUnix = startValues[2];\n        var maxUnix = endValues[2];\n\n        _this2.setState({\n          ranges: {\n            longitude: {\n              start: parseInt(minLongitude, 10),\n              end: parseInt(maxLongitude, 10)\n            },\n            latitude: {\n              start: parseInt(minLatitude, 10),\n              end: parseInt(maxLatitude, 10)\n            },\n            unix: {\n              start: moment(minUnix, moment.HTML5_FMT.DATETIME_LOCAL_MS).unix(),\n              end: moment(maxUnix, moment.HTML5_FMT.DATETIME_LOCAL_MS).unix()\n            }\n          },\n          values: {\n            longitude: {\n              start: parseInt(minLongitude, 10),\n              end: parseInt(maxLongitude, 10)\n            },\n            latitude: {\n              start: parseInt(minLatitude, 10),\n              end: parseInt(maxLatitude, 10)\n            },\n            unix: {\n              start: moment(minUnix, moment.HTML5_FMT.DATETIME_LOCAL_MS).unix(),\n              end: moment(maxUnix, moment.HTML5_FMT.DATETIME_LOCAL_MS).unix()\n            }\n          }\n        }, function () {\n          _this2.onSaveNewRangeValues();\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // This returns a formatted string in Unix time and appends 00:00:00.000Z to the end.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          ranges = _this$state.ranges,\n          values = _this$state.values;\n      return React.createElement(\"div\", {\n        className: \"sliderContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sliderWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Range, {\n        allowCross: false,\n        min: ranges.longitude.start,\n        max: ranges.longitude.end,\n        value: [values.longitude.start, values.longitude.end],\n        onChange: this.onLongitudeChange,\n        onAfterChange: this.onSaveNewRangeValues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"valueText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Longitude start: \", values.longitude.start), React.createElement(\"p\", {\n        className: \"valueText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Longitude end: \", values.longitude.end)), React.createElement(\"div\", {\n        className: \"sliderWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Range, {\n        allowCross: false,\n        min: ranges.latitude.start,\n        max: ranges.latitude.end,\n        value: [values.latitude.start, values.latitude.end],\n        onChange: this.onLatitudeChange,\n        onAfterChange: this.onSaveNewRangeValues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"valueText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Latitude start: \", values.latitude.start), React.createElement(\"p\", {\n        className: \"valueText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Latitude end: \", values.latitude.end)), React.createElement(\"div\", {\n        className: \"sliderWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Range, {\n        min: ranges.unix.start,\n        max: ranges.unix.end,\n        value: [values.unix.start, values.unix.end],\n        onChange: this.onUnixChange,\n        onAfterChange: this.onSaveNewRangeValues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"valueText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Unix start: \", this.getFormattedUnix(values.unix.start)), React.createElement(\"p\", {\n        className: \"valueText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Unix end: \", this.getFormattedUnix(values.unix.end))));\n    }\n  }]);\n\n  return SliderControlled;\n}(Component);\n\nexport { SliderControlled as default };","map":{"version":3,"sources":["/home/ali/Documents/thesis/3D Display of Datacube Query Results/main/my-app-ows/src/components/SliderPage.js"],"names":["React","Component","axios","convert","Slider","moment","API","Range","SliderControlled","props","getFormattedUnix","unix","format","onLatitudeChange","value","setState","values","state","latitude","start","end","onLongitudeChange","longitude","onUnixChange","onSaveNewRangeValues","data","onRangeValuesChange","ranges","url","query","get","then","resp","xmltojson","JSON","parse","xml2json","compact","spaces","lower","elements","text","upper","startValues","split","endValues","minLongitude","maxLongitude","minLatitude","maxLatitude","minUnix","maxUnix","parseInt","HTML5_FMT","DATETIME_LOCAL_MS","catch","err","console","log"],"mappings":"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","sourcesContent":["import 'rc-slider/assets/index.css';\nimport React, {Component} from 'react';\nimport axios from 'axios';\nimport convert from 'xml-js';\nimport Slider from 'rc-slider';\nimport moment from 'moment';\nimport { API } from '../App';\nimport '../style/SliderPage.css';\n\nconst Range = Slider.Range;\n\nexport default class SliderControlled extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ranges: {\n                longitude: {\n                    start: 0,\n                    end: 0\n                },\n                latitude: {\n                    start: 0,\n                    end: 0\n                },\n                unix: {\n                    start: 0,\n                    end: 0\n                }\n            },\n            values: {\n                longitude: {\n                    start: 0,\n                    end: 0\n                },\n                latitude: {\n                    start: 0,\n                    end: 0\n                },\n                unix: {\n                    start: 0,\n                    end: 0\n                }\n            }\n        };\n    }\n\n    // There we trigger initial min/max range values for the keys (longitude, latitude and unix)\n    componentDidMount() {\n        const url = API + this.props.query + '&' + this.props.format;\n        axios.get(url).then(resp => {\n            let xmltojson = JSON.parse(convert.xml2json(resp.data,{compact:false,spaces:4}));\n            const lower = xmltojson.elements[0].elements[0].elements[0].elements[0].elements[0].text;\n            const upper = xmltojson.elements[0].elements[0].elements[0].elements[1].elements[0].text;\n            const startValues = lower.split(' ');\n            const endValues = upper.split(' ');\n            const minLongitude = startValues[1];\n            const maxLongitude = endValues[1];\n            const minLatitude = startValues[0];\n            const maxLatitude = endValues[0];\n            const minUnix = startValues[2];\n            const maxUnix = endValues[2];\n\n            this.setState({\n                ranges: {\n                    longitude: {\n                        start: parseInt(minLongitude, 10),\n                        end: parseInt(maxLongitude, 10)\n                    },\n                    latitude: {\n                        start: parseInt(minLatitude, 10),\n                        end: parseInt(maxLatitude, 10)\n                    },\n                    unix: {\n                        start: moment(minUnix, moment.HTML5_FMT.DATETIME_LOCAL_MS).unix(),\n                        end: moment(maxUnix, moment.HTML5_FMT.DATETIME_LOCAL_MS).unix()\n                    }\n                },\n                values: {\n                    longitude: {\n                        start: parseInt(minLongitude, 10),\n                        end: parseInt(maxLongitude, 10)\n                    },\n                    latitude: {\n                        start: parseInt(minLatitude, 10),\n                        end: parseInt(maxLatitude, 10)\n                    },\n                    unix: {\n                        start: moment(minUnix, moment.HTML5_FMT.DATETIME_LOCAL_MS).unix(),\n                        end: moment(maxUnix, moment.HTML5_FMT.DATETIME_LOCAL_MS).unix()\n                    }\n                }\n            }, () => {\n                this.onSaveNewRangeValues();\n            })\n        }).catch(err => console.log(err))\n    }\n\n    // This returns a formatted string in Unix time and appends 00:00:00.000Z to the end.\n    getFormattedUnix = (unix) => {\n        return moment.unix(unix).format('YYYY-MM-DD[T]00:00:00') + '.000Z';\n    }\n\n    onLatitudeChange = (value) => {\n        this.setState({\n            values: {\n                ...this.state.values,\n                latitude: {\n                    start: value[0],\n                    end: value[1],\n                }\n            }\n        });\n    };\n    onLongitudeChange = (value) => {\n        this.setState({\n            values: {\n                ...this.state.values,\n                longitude: {\n                    start: value[0],\n                    end: value[1],\n                }\n            }\n        });\n    };\n    onUnixChange = (value) => {\n        this.setState({\n            values: {\n                ...this.state.values,\n                unix: {\n                    start: value[0],\n                    end: value[1],\n                }\n            }\n        });\n    };\n\n    onSaveNewRangeValues = () => {\n        const { values } = this.state;\n        const data = {\n            ...values,\n            unix: {\n                start: this.getFormattedUnix(values.unix.start),\n                end: this.getFormattedUnix(values.unix.end)\n            }\n        };\n        this.props.onRangeValuesChange(data);\n    }\n\n    render() {\n        const { ranges, values } = this.state;\n\n        return (<div className=\"sliderContainer\">\n            <div className='sliderWrapper'>\n                <Range\n                    allowCross={false}\n                    min={ranges.longitude.start}\n                    max={ranges.longitude.end}\n                    value={[values.longitude.start, values.longitude.end]}\n                    onChange={this.onLongitudeChange}\n                    onAfterChange={this.onSaveNewRangeValues}\n                />\n            </div>\n            <div>\n                <p className=\"valueText\">Longitude start: {values.longitude.start}</p>\n                <p className=\"valueText\">Longitude end: {values.longitude.end}</p>\n            </div>\n\n            <div className='sliderWrapper'>\n                <Range\n                    allowCross={false}\n                    min={ranges.latitude.start}\n                    max={ranges.latitude.end}\n                    value={[values.latitude.start, values.latitude.end]}\n                    onChange={this.onLatitudeChange}\n                    onAfterChange={this.onSaveNewRangeValues}\n                />\n            </div>\n            <div>\n                <p className=\"valueText\">Latitude start: {values.latitude.start}</p>\n                <p className=\"valueText\">Latitude end: {values.latitude.end}</p>\n            </div>\n\n            <div className='sliderWrapper'>\n                <Range\n                    min={ranges.unix.start}\n                    max={ranges.unix.end}\n                    value={[values.unix.start, values.unix.end]}\n                    onChange={this.onUnixChange}\n                    onAfterChange={this.onSaveNewRangeValues}\n                />\n            </div>\n            <div>\n                <p className=\"valueText\">Unix start: {this.getFormattedUnix(values.unix.start)}</p>\n                <p className=\"valueText\">Unix end: { this.getFormattedUnix(values.unix.end)}</p>\n            </div>\n        </div>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}